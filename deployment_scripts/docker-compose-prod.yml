name: my_project

services:
  caddy:
    container_name: caddy
    image: caddy
    ports:
      - 80:80
      - 443:443
    environment:
      - ROOT_URL=${ROOT_URL}
    volumes:
      - ${PROJECT_DIR}/configs/caddy/Caddyfile.prod:/etc/caddy/Caddyfile
      - ${PROJECT_DIR}/configs/caddy/tls:/tls:ro
    logging:
      options:
        max-size: 50m

  website:
    container_name: website_${VERSION}
    image: website:${VERSION}
    environment:
      - PORT=80
    logging:
      options:
        max-size: 50m

  postgres:
    container_name: postgres
    image: postgres:13.2
    environment:
      POSTGRES_PASSWORD: admin
      POSTGRES_MULTIPLE_DATABASES: app_backend,app_backend_user,app_backend_pass;
    volumes:
      - ${PROJECT_DIR}/DB_DATA_PROD/:/var/lib/postgresql/data/
      - ${PROJECT_DIR}/configs/pgsql/docker_pg_init.sh:/docker-entrypoint-initdb.d/docker_pg_init.sh
    healthcheck:
      test: pg_isready -U app_backend_user -d app_backend
      interval: 5s
      timeout: 5s
      retries: 100
    logging:
      options:
        max-size: 50m

  dbeaver:
    container_name: dbeaver
    image: dbeaver/cloudbeaver
    volumes:
      - ${PROJECT_DIR}/.dbeaver_workspace:/opt/cloudbeaver/workspace
      - ${PROJECT_DIR}/configs/dbeaver/cloudbeaver.conf:/opt/cloudbeaver/conf/cloudbeaver.conf
    depends_on:
      postgres:
        condition: service_healthy
    logging:
      options:
        max-size: 50m
