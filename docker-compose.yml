version: '3.9'
name: my_project

services:
  npm_installer:
    restart: 'no'
    image: node:20.13.0-alpine3.18
    working_dir: /src
    command:
      [
        'sh',
        '-cx',
        "corepack enable && corepack pnpm i && chmod -R 777 .pnpm-store && find . -name 'node_modules' -type d -prune -exec chmod -R 777 '{}' +"
      ]
    volumes:
      - ./:/src:rw

  # nginx:
  #   image: nginx
  #   restart: 'no'
  #   ports:
  #     - 3000:3000
  #     # - 443:443
  #     - 24678:24678
  #   environment:
  #     - ROOT_URL=${ROOT_URL}
  #   volumes:
  #     - ./configs/nginx/dev.conf:/etc/nginx/nginx.conf
  #     - ./configs/tls:/tls:ro
  #   depends_on:
  #     backend:
  #       condition: service_healthy

  website:
    restart: 'no'
    image: node:20.13.0-alpine3.18
    working_dir: /src
    command: ['sh', '-cx', 'cd /src/apps/website && npm run dev']
    ports:
      - ${PORT}:80
    environment:
      - PORT=80
      - INTERNAL_API_URL=http://backend:80
      - SUPABASE_SERVICE_ROLE_KEY=${SERVICE_ROLE_KEY}
      - SUPABASE_INTERNAL_API_URL=http://kong:8000
      - PUBLIC_ENV__SUPABASE_ANON_ROLE_KEY=${ANON_KEY}
      - PUBLIC_ENV__SUPABASE_API_URL=${API_EXTERNAL_URL}
    volumes:
      - ./:/src:rw
    depends_on:
      npm_installer:
        condition: service_completed_successfully

volumes:
  pg_db_data:
